#include<conio.h>
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<locale.h>

void MenuPrincipal();
void LISTAGEM();
void ENTRADA();
void INCLUIR();
void EXCLUIR();
void ESVAZIAR();

//======================

#define MAX 10

typedef struct{
               char nome[20];
               int codigo;
               float preco;
        } telem;

typedef struct {
        telem v[MAX];
        int n;        
        } tlista;
//=======================

void criar(tlista *L);
int vazia (tlista L);
int cheia (tlista L);
int tamanho (tlista L);
int inserir (tlista *L,int pos,telem dado);
int remover (tlista *L,int pos,telem *dado);
void imprimir(tlista *L);

//=======================


tlista PRODUTOS;
int opcao;

 int main(){
            setlocale(LC_ALL,"Portuguese");
            int fim=0;
            criar(&PRODUTOS);
            do
            {
              MenuPrincipal();
              switch(opcao)
              {
                case 1: LISTAGEM();
                        break;

                case 2: ENTRADA();
                        break;
                        
                case 3: INCLUIR();
                        break;
                
                case 4: EXCLUIR();
                        break;
                
                case 5: ESVAZIAR();
                        break;
                
                case 6: fim=1;
                        break;
                
                default: printf("Opção inválida\n");
                         getch();
              }
                                  
            }while(!(fim));
            printf("Fim do programa");
     getch();
     }

//===========================================================

void MenuPrincipal(){
                     system("cls");
                     printf("******** Editor de Lista ********\n");
                     printf("\n1 - Exibir Lista\n");
                     printf("\n2 - Adicionar produto\n");
                     printf("\n3 - Incluir produto\n");
                     printf("\n4 - Remover produto\n");
                     printf("\n5 - Esvaziar lista\n");
                     printf("\n6 - Sair\n");
                     printf("\n Digite sua opção: ");
                     scanf("%d",&opcao);
       }
       
//===============================================================

void ENTRADA()
     {
       telem produto;       
       system("cls");
       printf("********** Entrada de dados **********\n");
       printf("Digite o código do produto (zero para terminar): ");
       scanf("%d",&produto.codigo);        
       while(!(produto.codigo==0))
         {
              printf("Digite o preço do produto:R$ ");
              scanf("%f",&produto.preco);
              
              printf("Digite o nome do produto(zero para cancelar): ");
              scanf("%s",&produto.nome);   
                if(!(inserir(&PRODUTOS,tamanho(PRODUTOS)+1,produto)))
                {
                 printf("Número máximo de elementos inseridos");
                 getch();
                 return;
                }       
                
                
          
      
       printf("Digite o código do produto (zero para terminar): ");
       scanf("%d",&produto.codigo);
       
                   
         }
     }

//=============================================================================

void LISTAGEM(){
                
                system("cls");
                printf("********* Saída de Dados - Listagem de Produtos *********\n");
                printf("Produtos        Código     Preço(R$)     Nome\n");
                
                if(vazia(PRODUTOS))
                   {
                   printf("Nenhum produto inserido");
                   getch();
                   return;               
                   }
     imprimir(&PRODUTOS);
     getch();
     }
     
//================================================================    

void INCLUIR(){
              telem produto;
              int posicao;
              system("cls");
              printf("******** Incluir Dado ********\n");
              
       
              printf("Digite posição de inclusão: ");
              scanf("%d",&posicao); 
       
              printf("Digite o código do produto: ");
              scanf("%d",&produto.codigo);
              
              printf("Digite o preço do produto:R$ ");
              scanf("%f",&produto.preco);
              
             printf("Digite o nome do produto: ");
              scanf("%s",&produto.nome);
              
               if(!(inserir(&PRODUTOS,posicao,produto)))
                  {
                  printf("Número máximo de elementos inseridos ou posição inválida");
                  getch();
                  return;
                  }
     }

//========================================================================

void EXCLUIR()
     {
     telem produto;
     int posicao;
     system("cls");
     printf("*********** Excluir Dado ***********\n");
     printf("Digite posição de exclusão: ");
     scanf("%d",&posicao);
     if(!(remover(&PRODUTOS,posicao,&produto)))
         {
         printf("Posição inválida");
         getch();
         return;                                 
         }      
         else
         {
             printf("O produto %s foi excluído da lista.",produto.nome);
         }  
         getch();     
     }
     
//================================================================

void ESVAZIAR()
     {
     telem produto;
     int posicao;
     system("cls");
     if(vazia(PRODUTOS))
      {
      printf("Nenhum produto inserido");
      getch();
      return;
      }
            
      while(!(tamanho(PRODUTOS)==0))
            {
            remover(&PRODUTOS,tamanho(PRODUTOS),&produto);                       
            }  
      printf("Lista esvaziada");
      getch();
     }

//===================================================

void imprimir (tlista *L)
{

int i;
for(i=0;i<=(L->n)-1;i++)
{
printf("%4d %15d %12.2f %11s\n",i+1,L -> v[i].codigo,L -> v[i].preco,L -> v[i].nome);                     
}     
return;
}
//===================================================
void criar(tlista *L){
L->n=0;     
}

//====================================================

 int vazia(tlista L){
     return (L.n==0);
     }
//====================================================

 int cheia(tlista L){
     return (L.n==MAX);
     }
 
//=====================================================

 int tamanho(tlista L){
     return (L.n);
     }
//=======================================================

 int inserir(tlista *L,int pos,telem dado){
     /*Retorna 0 se a posição for inválida ou se a lista estiver cheio */
     /*Caso contrário,retorna 1*/
     
     int i;
     
     if ( (L->n == MAX) ||(pos > L->n + 1) ) return (0);
    
     for(i=L->n; i>=pos;i--)
         L->v[i]=L->v[i-1];
         
         L->v[pos-1]=dado;
         (L->n)++;
         return(1);
         }
         
//=========================================================

int remover(tlista *L,int pos, telem *dado){
    /* O parâmetro dado irá receber o elemento encontrado */
    /* Retorna 0 se a posição for inválida.Caso contrário,retorna 1*/
    
    int i;
    
    if((pos>L->n)||(pos<=0)) return (0);
    
    *dado=L->v[pos-1];
    for(i=pos;i<=(L->n)-1;i++)
       L->v[i-1] = L->v[i];
       (L->n)--;
       return(1);
    }
